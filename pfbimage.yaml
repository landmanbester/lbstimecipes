_include:
  - (cultcargo)pfb-imaging.yml

opts:
  log:
    dir: logs
    nest: 2
  backend:
    select: native
    # select: singularity
    # singularity:
    #   rebuild: true
    #   bind_dirs:
    #     /home/bester/numba_cache: rw
    #   env:
    #     NUMBA_CACHE_DIR: /home/bester/numba_cache

image:
  name: pfb-image
  info: Example imaging recipe using pfb-imaging with stimela2

  assign_based_on:
    obs:
      'esofull':
        ms: [/scratch/bester/ms1_target.zarr,/scratch/bester/ms2_target.zarr]
        gains: ['/home/bester/projects/ESO137/output/gains/obs1/stage6_interp.qc/GJK-net',
                '/home/bester/projects/ESO137/output/gains/obs2/stage6_interp.qc/GJK-net']
        freq-range: '882750000.0:1685041015.625'
        channels-per-image: 192
      'esohi':
        ms: [/scratch/bester/ms1_target.zarr,/scratch/bester/ms2_target.zarr]
        gains: ['/home/bester/projects/ESO137/output/gains/obs1/stage6_interp.qc/GJK-net',
                '/home/bester/projects/ESO137/output/gains/obs2/stage6_interp.qc/GJK-net']
        freq-range: '1.295e9:1.503e9'
        channels-per-image: 96
      'sgra':
        ms: [/home/bester/projects/GC/msdir/1590089458_sdp_l0_1024ch_SGRA.ms]
        freq-range: '570230468.75:1009042968.75'
        channels-per-image: 69

  assign:
    output-filename: '{recipe.basedir}/{recipe.obs}/stage0'
    fits-output-folder: '{recipe.basedir}/{recipe.obs}/fits'
    log-directory: '{recipe.basedir}/{recipe.obs}/logs'

  aliases:
    output-filename: '*.output-filename'
    fits-output-folder: '*.fits-output-folder'
    log-directory: '*.log-directory'

  inputs:
    obs:
      default: esofull
      choices: [esofull, esohi, sgra]
      info:
        Which observation to process
    basedir:
      dtype: Directory
      required: true
      info:
        Base directory in which to place output data products.
    robustness:
      dtype: float
      default: -0.3
      info:
        Briggs robustness level.
        Less than -2 corresponds to uniform, larger than 2 to natural.
    field-of-view:
      dtype: float
      default: 2.0
    super-resolution-factor:
      dtype: float
      default: 2.5
      info:
        How much to oversample Nyquist by at the highest frequency
    chan-average:
      dtype: int
      default: 4
      info:
        How many channels to average together
    bda-decorr:
      dtype: float
      default: 0.98
      info:
        Amount of amplitude loss that can be tolerated at edge of field
    niter:
      dtype: int
      default: 15
      info:
        Number of major cycles
    l1-reweight-from:
      dtype: int
      default: 7
    rmsfactor:
      dtype: float
      default: 1.0
      info:
        Multiple of the rms to threshold by
    overwrite:
      default: true
      aliases: ['*.overwrite']

  steps:
    init:
      cab: pfb.init
      info: 'Initialise imaging data products'
      params:
        ms: =recipe.ms
        gain-table: =IFSET(recipe.gains)
        nthreads: 1
        nworkers: 64
        sigma-column: SIGMA_SPECTRUM
        channels-per-image: =recipe.channels-per-image
        chan-average: =recipe.chan-average
        max-field-of-view: =recipe.field-of-view
        bda-decorr: =recipe.bda-decorr
        freq-range: =recipe.freq-range
        overwrite: =recipe.overwrite

    grid:
      cab: pfb.grid
      info: 'Setup grid for imaging'
      params:
        super-resolution-factor: =recipe.super-resolution-factor
        field-of-view: =recipe.field-of-view
        robustness: =recipe.robustness
        nthreads: 7
        nworkers: 10
        psf-oversize: 1.4
        overwrite: =recipe.overwrite

    sara:
      cab: pfb.sara
      info: Cleaning step
      params:
        niter: =recipe.niter
        bases: 'self,db1,db2,db3,db4'
        nlevels: 2
        l1-reweight-from: =recipe.l1-reweight-from
        pd-tol: [1e-4]
        pd-maxit: 450
        pd-verbose: 2
        pd-report-freq: 50
        tol: 1e-3
        gamma: 0.99
        rmsfactor: =recipe.rmsfactor
        eta: 1e-3
        positivity: 1
        nthreads: 64

    restore:
      cab: pfb.restore
      info: Produce restored image.
      params:
        nworkers: 10
        nthreads: 5
        outputs: iI


