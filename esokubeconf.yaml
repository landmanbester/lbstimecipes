_include:
  - kubeconfig.yaml

opts:
  backend:
    select: kube
    kube:
      job_pod:
        memory:
          limit: 0
        cpu:
          request:
            0
      dask_cluster:
        num_workers: 1
        scheduler_pod:
          type: scheduler
          memory:
            limit: "3Gi"
          cpu:
            request:
              1
        worker_pod:
          memory:
            limit: 0
          cpu:
            request:
              0

esoimage:
  steps:
    init:
      backend:
        select: singularity
        singularity:
          rebuild: true
          bind_dirs:
            /home/bester/numba_cache: rw
          env:
            NUMBA_CACHE_DIR: /home/bester/numba_cache

    grid:
      assign:
        # we need this so the workers get the right env vars
        config.opts.backend.kube.env.NUMBA_NUM_THREADS: '30'
        config.opts.backend.kube.env.NUMEXPR_NUM_THREADS: '30'
        config.opts.backend.kube.env.JAX_ENABLE_X64: 'True'
        config.opts.backend.kube.env.JAX_PLATFORMS: 'cpu'
        config.opts.backend.kube.env.LD_LIBRARY_PATH: '/usr/local/lib'
      backend:
        select: kube
        kube:
          enable: true
          job_pod:  # This is where the main application runs.
            type: pudgy
            memory:
              limit: "27Gi"
            cpu:
              request: 28  # > than half available
          dask_cluster:  # Set up the Dask cluster.
            enable: true
            num_workers: 2
            name: pfb-test-cluster
            threads_per_worker: 1
            worker_pod:
              type: pudgy
              memory:
                limit: "27Gi"
              cpu:
                request: 28
          always_pull_images: true
      params:
        fits-mfs: false
        fits-cubes: false
        nworkers: 2
        nthreads: 30


    sara:
      backend:
        select: kube
        kube:
          enable: true
          job_pod:  # This is where the main application runs.
            type: fat
            memory:
              limit: "170Gi"
            cpu:
              request: 50
          dask_cluster:  # no Dask cluster.
            enable: false
          always_pull_images: true
      params:
        fits-mfs: false
        fits-cubes: false
        nthreads: 90
    # pull_model:
    #   cab: s3tolocal
    #   params:
    #     source: s3://path
    #     dest: /local/path
