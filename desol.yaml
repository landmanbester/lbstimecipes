_include:
  - (pfb)stimela_cabs.yaml
  - (quartical)stimela_cabs.yaml


opts:
  log:
    dir: logs
    nest: 2

desol:
  name: desol
  info: Recipe to subtract the sun from observation


  inputs:
    ms:
      dtype: MS
      required: true
      aliases: ["*.ms"]
    pfb_output_dir:
      default: 'pfb_out'
      info: Where to put pfb's ouputs
    qcal_output_dir:
      default: 'qcal_out'
      info: Where to put qcal's ouputs
    data_column:
      default: DATA
    weight_column:
      default: WEIGHT_SPECTRUM
    model_column:
      default: MODEL_DATA
    sol_column:
      default: SOL_DATA
    nthreads:
      dtype: int
      aliases: ['*.nthreads']
      default: 32
    nband:
      dtype: int
      aliases: ["*.nband"]
      default: 8
    nband_out:
      dtype: int
      default: 32
    intergrations_per_image:
      dtype: int
      aliases: ["*.integrations_per_image"]
      default: -1
    scheduler:
      default: threads
      aliases: ["*.scheduler"]
    robustness:
      default: 0.0
      aliases: ["*.robustness"]

  steps:
    init_full:
      cab: pfb_init
      info:
        Precompute Stokes I visibilities.
      params:
        ms: '{recipe.ms}'
        data_column: '{recipe.data_column}'
        weight_column: '{recipe.weight_column}'
        output_filename: '{recipe.pfb_out}/full'

    grid_full:
      cab: pfb_grid
      info:
        Create dirty image containing both objects
      params:
        field_of_view: 22
        super_resolution_factor: 1.15
        psf: false
        weight: false
        nband: 1
        output_filename: '{recipe.pfb_out}/full'

    init:
      cab: pfb_init
      info:
        Precompute Stokes I visibilities.
      params:
        ms: '{recipe.ms}'
        data_column: '{recipe.data_column}'
        weight_column: '{recipe.weight_column}'
        output_filename: '{recipe.pfb_out}/test'

    grid_sol:
      cab: pfb_grid
      info:
        Create dirty image and PSF for Sun
      params:
        field_of_view: 1.5
        super_resolution_factor: 2.0
        target: Sun
        postfix: sun
        output_filename: '{recipe.pfb_out}/test'

    clean_sol:
      cab: pfb_clean
      info:
        Run CLEAN separately on Sun field
      params:
        postfix: sun
        nmiter: 10
        sigmathreshold: 2.0
        mop_gamma: 0.8
        output_filename: '{recipe.pfb_out}/test'

    degrid_sol:
      cab: pfb_degrid
      info:
        Predict sun model to separate column
      params:
        model_column: "{recipe.sol_column}"
        postfix: sun
        nband_out: "{recipe.nband_out}"
        output_filename: '{recipe.pfb_out}/test'

    subtract_sol:
      cab: quartical
      info:
        Subtract sun model column
      params:
        input_ms.path: '{recipe.ms}'
        input_ms.weight_column: WEIGHT_SPECTRUM
        input_ms.time_chunk: '0'
        input_ms.freq_chunk: '128'
        input_ms.select_uv_range: [0,0]
        input_ms.group_by: [FIELD_ID,DATA_DESC_ID,SCAN_NUMBER]
        input_ms.select_corr: [0, 3]
        input_model.recipe: '{recipe.sol_column}'
        input_model.apply_p_jones: false
        solver.terms: [G]
        solver.iter_recipe: [0]
        solver.propagate_flags: false
        solver.robust: false
        solver.reweighting_flag_threshold: 0
        solver.threads: 1
        solver.reference_antenna: 0
        output.gain_directory: '{recipe.qcal_output_filename}/unity.qc'
        output.log_directory: '{recipe.qcal_output_filename}/'
        output.overwrite: false
        output.products: [residual]
        output.columns: [DESOL_DATA]
        output.flags: false
        output.apply_p_jones_inv: false
        output.net_gains: []
        mad_flags.enable: false
        dask.threads: 8
        dask.scheduler: threads
        G.type: complex
        G.time_interval: 1
        G.freq_interval: 1

    init_desol:
      cab: pfb_init
      info:
        Precompute Stokes I visibilities.
      params:
        ms: '{recipe.ms}'
        data_column: DESOL_DATA
        weight_column: '{recipe.weight_column}'
        output_filename: '{recipe.pfb_out}/resid'

    grid_desol:
      cab: pfb_grid
      info:
        Create dirty image containing both objects
      params:
        field_of_view: 22
        super_resolution_factor: 1.15
        psf: false
        weight: false
        nband: 1
        output_filename: '{recipe.pfb_out}/resid'
