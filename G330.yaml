_include:
  - (pfb)stimela_cabs.yml

opts:
  log:
    dir: logs
    nest: 2


init_loop:
  info: init loop over datasets

  assign:
    obs: G33089

  for_loop:
    var: obs
    over: [G33089]  #, G33159, G33195, G33231, G33265]
    # scatter: 4  # to do it in parallel

  # observation specific settings in subsections
  assign_based_on:
    obs:
      G33089:
        ms: [msdir/G330.89-0.36.ms]
      G33159:
        ms: [msdir/G331.59-0.36.ms]
      G33195:
        ms: [msdir/G331.95+0.35.ms]
      G33231:
        ms: [msdir/G332.31-0.36.ms]
      G33265:
        ms: [msdir/G332.31+0.35.ms]

  inputs:
    nthreads_dask:
      dtype: int
      default: 8
    nvthreads:
      dtype: int
      default: 8
    data_column:
      default: DATA
      dtype: str
    weight_column:
      default: WEIGHT
      dtype: str
    flag_column:
      default: FLAG
      dtype: str
    channels_per_image:
      dtype: int
      default: 256
    integrations_per_image:
      dtype: int
      default: -1
    chan_average:
      dtype: int
      default: 2

  steps:
    init_obs:
      cab: pfb_init
      info:
        Initialise imaging data products
      params:
        ms: =recipe.ms
        output_filename: 'output/{recipe.obs}/data'
        log_directory: 'output/{recipe.obs}/logs'
        data_column: =recipe.data_column
        flag_column: =recipe.flag_column
        weight_column: =recipe.weight_column
        nthreads_dask: =recipe.nthreads_dask
        nvthreads: =recipe.nvthreads
        channels_per_image: =recipe.channels_per_image
        integrations_per_image: =recipe.integrations_per_image
        chan_average: =recipe.chan_average


em_loop:
  info: Loop over em_steps

  for_loop:
    var: iter
    over: iters

  inputs:
    basedir:
      required: true
    obs:
      choices: ['G33089', 'G33159', 'G33195', 'G33231', 'G33265']
      required: true
    iters:
      dtype: List[int]
      default: [0,1]
      info:
        List enumerating number of EM steps to perform
    cell_size:
      dtype: float
      info: 'cell size in arcseconds'
    nx:
      dtype: int
      info: 'number of pixels in x direction'
    ny:
      dtype: int
      info: 'number of pixels in y direction'
    super_resolution_factor:
      dtype: float
      default: 2.5
    field_of_view:
      dtype: float
      default: 2.2
    rmsfactor:
      dtype: float
      default: 0.65
      info: 'thresholding factor'
    robustness:
      dtype: float
      default: -0.5
      info: 'robustness factor for briggs weighting'
    nthreads_dask:
      dtype: int
      default: 8
      aliases: ['*.nthreads_dask']  # does not work. Bug in for loop?
    nvthreads:
      dtype: int
      default: 8
      aliases: ['*.nvthreads']
    nband:
      dtype: int
      default: 8
      aliases: ['*.nband']
    tol:
      dtype: float
      default: 1e-4

  steps:
    grid:
      cab: pfb_grid
      assign:
        previous_iter: =recipe.iter - 1
        model_name: '{recipe.basedir}/{recipe.obs}/data_I_{recipe.previous_iter}_model.mds'
      params:
        # cell_size: =recipe.cell_size
        # nx: =recipe.nx
        # ny: =recipe.ny
        super_resolution_factor: =recipe.super_resolution_factor
        field_of_view: =recipe.field_of_view
        robustness: =recipe.robustness
        overwrite: true
        residual: =IF(recipe.iter==0, false, true)  # Don't try to compute residual at first iteration
        l2reweight_dof: =IF(recipe.iter==0, 0, 3)  # Don't reweight at first iteration
        postfix: =recipe.iter
        nthreads_dask: =recipe.nthreads_dask
        transfer_model_from: =IF(recipe.iter==0, '', '{recipe.model_name}')
        output_filename: '{recipe.basedir}/{recipe.obs}/data'
        log_directory: '{recipe.basedir}/{recipe.obs}/logs'

    spotless:
      cab: pfb_spotless
      params:
        rmsfactor: =recipe.rmsfactor
        niter: =IF(recipe.iter==0, 30, 15)
        tol: =recipe.tol
        l1reweight_from: =IF(recipe.iter==0, 10, 5)
        pd_tol: 1e-4
        pd_report_freq: 50
        # bases: ['self','db1','db2']
        nlevels: 3
        memory_greedy: true
        postfix: =recipe.iter
        nthreads_dask: =recipe.nthreads_dask
        output_filename: '{recipe.basedir}/{recipe.obs}/data'
        log_directory: '{recipe.basedir}/{recipe.obs}/logs'

    model2comps:
      cab: pfb_model2comps
      params:
        nbasisf: 4
        overwrite: true
        postfix: =recipe.iter
        output_filename: '{recipe.basedir}/{recipe.obs}/data'
        log_directory: '{recipe.basedir}/{recipe.obs}/logs'
