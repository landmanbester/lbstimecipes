_include:
  - (cultcargo)pfb-imaging.yml

opts:
  log:
    dir: logs
    nest: 2
  backend:
    select: singularity
    singularity:
      rebuild: true
      bind_dirs:
        /home/bester/numba_cache: rw
      env:
        NUMBA_CACHE_DIR: /home/bester/numba_cache



esoimage:
  name: esoimage
  info: ESO137 imaging recipe

  assign:
    ms: [/scratch/bester/ms1_target.zarr,/scratch/bester/ms2_target.zarr]
    gains: ['/home/bester/projects/ESO137/output/gains/obs1/stage6_interp.qc/GJK-net',
            '/home/bester/projects/ESO137/output/gains/obs2/stage6_interp.qc/GJK-net']

  assign_based_on:
    band:
      'FULL':
        freq-range: '882750000.0:1685041015.625'  # 883063476.5625:1684727539.0625  # averaged min and max
        channels-per-image: 384
      'HI':
        freq-range: '1.295e9:1.503e9'
        channels-per-image: 100
      'LO':
        freq-range: '0.961e9:1.145e9'
        channels-per-image: 100


  inputs:
    band:
      default: FULL
    fits-output-folder:
      dtype: str
      aliases: ['*.fits-output-folder']
      info:
        Directory to place fits files
    log-directory:
      dtype: str
      aliases: ['*.log-directory']
      info:
        Directory in which to place logs
    integrations-per-image:
      default: -1
      info:
        Number of integrations per image.
    robustness:
      dtype: float
      default: 0.0
      info:
        Briggs robustness level.
        Less than -2 corresponds to uniform, larger than 2 to natural.
    field-of-view:
      dtype: float
      default: 2.0
    super-resolution-factor:
      dtype: float
      default: 2.5
      info:
        How much to oversample Nyquist by at the highest frequency
    chan-average:
      dtype: int
      default: 4
      info:
        How many channels to average together
    bda-decorr:
      dtype: float
      default: 0.98
      info:
        Amount of amplitude loss that can be tolerated at edge of field
    niter:
      dtype: int
      default: 15
      info:
        Number of major cycles
    l1-reweight-from:
      dtype: int
      default: 7
    rmsfactor:
      dtype: float
      default: 1.0
      info:
        Multiple of the rms to threshold by
    overwrite:
      default: true
      aliases: ['*.overwrite']

  outputs:
    basedir:
      dtype: Directory
      required: true
      info:
        Base directory in which to place output data products.

  steps:
    init:
      cab: pfb.init
      info: 'Initialise imaging data products'
      params:
        ms: =recipe.ms
        gain-table: =recipe.gains
        output-filename: '{recipe.basedir}/{recipe.band}_bda{recipe.bda-decorr}_fov{recipe.field-of-view}'
        nthreads: 1
        nworkers: 64
        sigma-column: SIGMA_SPECTRUM
        channels-per-image: =recipe.channels-per-image
        integrations-per-image: =recipe.integrations-per-image
        chan-average: =recipe.chan-average
        max-field-of-view: =recipe.field-of-view
        bda-decorr: =recipe.bda-decorr
        freq-range: =recipe.freq-range
      tags: [init]

    grid:
      cab: pfb.grid
      info: 'Setup grid for imaging'
      params:
        output-filename: '{recipe.basedir}/{recipe.band}_bda{recipe.bda-decorr}_fov{recipe.field-of-view}'
        super-resolution-factor: =recipe.super-resolution-factor
        field-of-view: =recipe.field-of-view
        robustness: =recipe.robustness
        nthreads: 7
        nworkers: 10
        psf-oversize: 1.4
        overwrite: =recipe.overwrite
      tags: [image]

    sara:
      cab: pfb.sara
      info: Cleaning step
      params:
        output-filename: '{recipe.basedir}/{recipe.band}_bda{recipe.bda-decorr}_fov{recipe.field-of-view}'
        niter: =recipe.niter
        bases: 'self,db1,db2,db3,db4'
        nlevels: 2
        l1-reweight-from: =recipe.l1-reweight-from
        pd-tol: [2e-4]
        pd-maxit: 450
        pd-verbose: 2
        pd-report-freq: 50
        tol: 1e-3
        gamma: 0.99
        rmsfactor: =recipe.rmsfactor
        eta: 1e-3
        positivity: 1
        nthreads: 64
      tags: [image]

    restore:
      cab: pfb.restore
      info: Produce restored image.
      params:
        output-filename: '{recipe.basedir}/{recipe.band}_bda{recipe.bda-decorr}_fov{recipe.field-of-view}'
        nworkers: 10
        nthreads: 5
        outputs: mMrRiI
      tags: [final]


